diff --git a/js/views.js b/js/views.js
index f6751cc..94e7ef0 100644
--- a/js/views.js
+++ b/js/views.js
@@ -1927,6 +1927,35 @@ function viewJobs(){
     ? `<div class="small muted past-jobs-filter-status">Showing ${completedFiltered.length} of ${totalCompletedCount} logged jobs.</div>`
     : "";
   const activeColumnCount = 14;
+  const now = new Date();
+  const formatPastDueLabel = (dueISO)=>{
+    const dueDate = parseDateLocal(dueISO);
+    if (!dueDate) return "Past due";
+    dueDate.setHours(23, 59, 59, 999);
+    const diffMs = now.getTime() - dueDate.getTime();
+    if (diffMs <= 0) return "Past due";
+    const totalHours = diffMs / (1000 * 60 * 60);
+    if (totalHours >= 24){
+      const totalDays = Math.floor(totalHours / 24);
+      const remainingHours = Math.floor(totalHours % 24);
+      const parts = [];
+      if (totalDays > 0){
+        parts.push(`${totalDays} day${totalDays === 1 ? "" : "s"}`);
+      }
+      if (remainingHours > 0){
+        parts.push(`${remainingHours} hr${remainingHours === 1 ? "" : "s"}`);
+      }
+      if (!parts.length){
+        parts.push("1 day");
+      }
+      return `Past due by ${parts.join(" ")}`;
+    }
+    const wholeHours = Math.floor(totalHours);
+    if (wholeHours >= 1){
+      return `Past due by ${wholeHours} hr${wholeHours === 1 ? "" : "s"}`;
+    }
+    return "Past due by less than 1 hr";
+  };
   const rows = jobsForCategory.map(j => {
     const jobFiles = Array.isArray(j.files) ? j.files : [];
     const fileLinks = jobFiles.length
@@ -1978,7 +2007,7 @@ function viewJobs(){
     const statusLabel = behindSchedule ? 'Behind' : (aheadSchedule ? 'Ahead' : 'On pace');
     let statusDetail = '';
     if (req.requiredPerDay === Infinity){
-      statusDetail = 'Past due';
+      statusDetail = formatPastDueLabel(j.dueISO);
     } else if (behindSchedule){
       statusDetail = `Needs ${req.requiredPerDay.toFixed(1)} hr/day`;
     } else if (aheadSchedule){
@@ -2000,7 +2029,7 @@ function viewJobs(){
     const estimateDisplay = formatHours(j.estimateHours);
     const remainingDisplay = formatHours(remainHrs);
     const needDisplay = req.requiredPerDay === Infinity
-      ? '<span class="job-badge job-badge-overdue">Past due</span>'
+      ? `<span class="job-badge job-badge-overdue">${esc(formatPastDueLabel(j.dueISO))}</span>`
       : `${needPerDay} hr/day needed (capacity ${hoursPerDay.toFixed(1)} hr/day)`;
     const statusDisplay = [
       `<div class="job-status ${aheadSchedule ? 'job-status-ahead' : (behindSchedule ? 'job-status-behind' : 'job-status-onpace')}">${esc(statusLabel)}</div>`,
diff --git a/style.css b/style.css
index d8c011b..ff6a71f 100644
--- a/style.css
+++ b/style.css
@@ -1801,10 +1801,14 @@ body.modal-open .auth-bar {
   border-bottom: 1px solid #dfe5f4;
 }
 .job-table thead th:nth-child(11) {
-  width: 1%;
-  max-width: 64px;
+  min-width: 118px;
+  width: 118px;
+  max-width: 118px;
   white-space: normal;
 }
+.job-table thead th:nth-child(13) {
+  width: 140px;
+}
 .job-table thead th:nth-child(15) {
   min-width: 180px;
   width: 200px;
@@ -1828,7 +1832,8 @@ body.modal-open .auth-bar {
 }
 
 .job-col-main {
-  width: 280px;
+  width: 210px;
+  max-width: 210px;
 }
 
 .job-col-net {
@@ -1903,8 +1908,9 @@ body.modal-open .auth-bar {
 }
 
 .job-col-need {
-  width: 1%;
-  max-width: 48px;
+  min-width: 118px;
+  width: 118px;
+  max-width: 118px;
   white-space: normal;
 }
 .job-col-need .job-cell-value {
@@ -1913,11 +1919,13 @@ body.modal-open .auth-bar {
 }
 .job-col-note {
   min-width: 140px;
+  width: 140px;
+  max-width: 140px;
 }
 .job-main {
   display: flex;
   flex-direction: column;
-  gap: 4px;
+  gap: 0;
 }
 .job-main-category-picker {
   display: inline-flex;
@@ -1939,11 +1947,12 @@ body.modal-open .auth-bar {
   border-color: rgba(33, 150, 243, 0.55);
 }
 .job-main strong {
-  font-size: 16px;
+  font-size: 14px;
   color: #13233f;
+  line-height: 1.3;
 }
 .job-main-dates {
-  font-size: 13px;
+  font-size: 11px;
   color: #637192;
 }
 .job-col-material {
